{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "resourceName": {
      "type": "string",
      "metadata": {
        "description": "Name of Data Lake Analytics account to deploy."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "northeurope"
      ],
      "metadata": {
        "description": "Azure location where to deploy this resource"
      }
    },
    "defaultDataLakeStoreName": {
      "type": "string",
      "metadata": {
        "description": "Name of Data Lake Store Account to use as default storage"
      }
    },
    "dataLakeStores": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of Data Lake Stores to register in the Analytics account"
      }
    },
    "storageAccounts": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Array of Storage Accounts to register in the Analytics account"
      }
    },
    "firewallState": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Switch for firewall for Data Lake Analytics account"
      }
    },
    "firewallRules": {
      "type": "array",
      "defaultValue": [
        {
          "name": "AllowAllWindowsAzureIps",
          "startIpAddress": "0.0.0.0",
          "endIpAddress": "0.0.0.0"
        }
      ],
      "metadata": {
        "description": "List of firewall rules to be implemented in the Data Lake Store"
      }
    },
    "firewallAllowAzureIps": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "metadata": {
        "description": "Switch to allow Azure IP addresses when using the Data Lake Store firewall"
      }
    }
  },
  "variables": {
    "dataLakeAnalyticsName": "[parameters('resourceName')]",
    "firewallRules": "[parameters('firewallRules')]",
    "emptyDataLakeStoresWorkaround": {
      "true": "[parameters('dataLakeStores')]",
      "false": [
        {
          "name": "[parameters('defaultDataLakeStoreName')]",
          "properties": {}
        }
      ]
    },
    "dataLakeStores": "[variables('emptyDataLakeStoresWorkaround')[string(greater(length(parameters('dataLakeStores')), 0))]]",
    "storageAccounts": "[parameters('storageAccounts')]"
  },
  "resources": [
    {
      "comments": "Deploy Data Lake Analytics account",
      "name": "[variables('dataLakeAnalyticsName')]",
      "type": "Microsoft.DataLakeAnalytics/accounts",
      "location": "[parameters('location')]",
      "apiVersion": "2016-11-01",
      "properties": {
        "defaultDataLakeStoreAccount": "[parameters('defaultDataLakeStoreName')]",
        "dataLakeStoreAccounts": "[variables('dataLakeStores')]",
        "storageAccounts": "[variables('storageAccounts')]",
        "firewallState": "[parameters('firewallState')]",
        "firewallAllowAzureIps": "[parameters('firewallAllowAzureIps')]"
      }
    },
    {
      "comments": "Iterate over and deploy list of firewall rules given as parameter. If no rules have been specified, a default rule to allow Azure traffic will be added.",
      "dependsOn": [
        "[variables('dataLakeAnalyticsName')]"
      ],
      "type": "Microsoft.DataLakeAnalytics/accounts/firewallrules",
      "apiVersion": "2016-11-01",
      "condition": "[greater(length(variables('firewallRules')), 0)]",
      "copy": {
        "name": "iterator",
        "count": "[length(variables('firewallRules'))]"
      },
      "name": "[concat(variables('dataLakeAnalyticsName'), '/' , variables('firewallRules')[copyIndex()].name)]",
      "properties": {
        "startIpAddress": "[variables('firewallRules')[copyIndex()].startIpAddress]",
        "endIpAddress": "[variables('firewallRules')[copyIndex()].startIpAddress]"
      }
    }
  ],
  "outputs": {
    "dataLakeAnalyticsName": {
      "type": "string",
      "value": "[variables('dataLakeAnalyticsName')]"
    }
  }
}
